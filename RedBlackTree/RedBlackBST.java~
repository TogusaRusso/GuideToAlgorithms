class RedBlackBST <Key extends Comparable<Key>, Value> {
  private class Node {
    private Key   key;
    private Value val;
    private Node  left, right;
    private int   count;
  
    public Node(Key key, Value val)
    {
      this.key = key;
      this.val = val;
    }
  }

  public Val get(Key key) {
    Node x = root;
    while (x != null) {
      int cmp = key.compareTo(x.key);
      if      (cmp < 0) x = x.left;
      else if (cmp > 0) x = x.right;
      else              return x.val;
    }
    return null;
  }
    
  
}